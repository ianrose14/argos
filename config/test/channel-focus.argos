{
  node_router='
    input -> c::Counter() -> Discard;

    loghandler::LogHandler() -> q::Queue() -> output;
    q[1] -> log_qdrops::Counter() -> Discard;

    Idle -> pkt_qdrops::Counter() -> Idle;

    StaticChannel(HANDLER chan_mgr.lease_channel, CHANNEL 1, PRIORITY 10);

    foo::InfiniteSource(\<0000>, LIMIT 1, ACTIVE false) ->
        SetSniffer(CHANNEL 6) ->
        GeoFocusChannel(FOCUS_HANDLER wifi_ol.proxy_handler_write,
                        SETCHAN_HANDLER chan_mgr.lease_channel,
                        PRIORITY 0, DURATION 20, COOLDOWN 10, LOGGING DEBUG) -> Discard;

    Script(wait 10,
           set msg $(sprintf "host=%s %s" $(sys.hostname) "$(chan_mgr.stats)"),
           write loghandler.log chan_mgr INFO "$(msg)",
           write chan_mgr.reset,
           loop);'

  node_taps='merged'

  server_router='
    input -> loghandler::LogHandler() -> Quit("unexpected loghandler output") -> Discard;'
}
